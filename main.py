#نجهز المكتبات حقت بايثوم

import pygame
import time
import random
#هنا احنا نهيء الخط عشانت النصوص
pygame.font.init()
# اول شيء  نجهز النافذة حقت اللعبة حقتنا بالارتفاع و العرض 
WIDTH, HEIGHT = 600, 600
#نسوي متغير عشان نستدعيه في الكلاس الاساسي او الفانكشن الاساسية 
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
#عنوان النافذة
pygame.display.set_caption("Space Dodge")
#هنا نسوي الخلفية حقت النافذة حقتنا ممكن باي لون او صورة 
#نقدر نكتبه ممكن  BG = pygame.image.load("bg.jpeg") لكن عشان نخلي الخلفية الي حطيناها تجي على مقاس النافذة الافضل نكنت الامر كدا 

BG = pygame.transform.scale(pygame.image.load("bg.jpeg"), (WIDTH, HEIGHT))
#هنا نزبط خصائص اللاعب حقنا من عرض و ارتفاع راح يكون شكله مستطيل كبداية طبعا ممكن نحط شكل اخر اخر او حتى تصميم لشخصية ولكن للبساطة
PLAYER_WIDTH = 40
PLAYER_HEIGHT = 60
#هنا اعطينا قيمة لسرعة اللاعب حقنا 
PLAYER_VEL = 5
#هذا للشهب المتساقط الي راح نحاول نتجنبها 
STAR_WIDTH = 10
STAR_HEIGHT = 20
#سرعة الشهب
STAR_VEL = 3
# هنا حددنا خصائص الخط و نوع الخط وحججمه
FONT = pygame.font.SysFont("comicsans", 30)

#هذي و ظيفة نعرفها حتى نرسم الاشكال في الشاشة و داخل الاقواس كتبنا المتغيرات الي نبغا نرسمهم داخل الوظيفة 
def draw(player, elapsed_time, stars):
# امر بليت هو امر يستعمل في لغة بايثون عشان نرسم الشيء الي نبغاه في الشاشة واحنا هنا استعملناه حتى نرسم الخلفية الي اشرنا لها BG
#  ايش المقصود ب (0,0) هذا هي الاحداثياث على الشاشة حقتنا واحنا هنا نبغى الصورة تعبي الشاشة عشان كدا جاطيناها 0,0 
#كمان ملاحظة ان y ترا كل مانزلنا تحت في قيمتها تزيد 
    WIN.blit(BG, (0, 0))
#  هنا بنحط الوقت في الشاشة و هنستعمل ميتهود ريندر داخلها تتطلب عدة متغيرات 
#FONT.render(): هذه هي وظيفة في Pygame المستخدمة لإنشاء نص.
#f"Time: {round(elapsed_time)}s" هذا اصيغة النص الي راح ينشئ نلاحظ في S صغيرة هذي عشان تذلنا على انا ثانية
#1: هذا هو معامل التمويه (معامل الجودة) وهو يتحكم في كيفية عرض النص على الشاشة. قيمة 1 تعني أنه لا يوجد تمويه.
#"white": هذا هو لون النص. في هذه الحالة، النص سيكون أبيض.
    time_text = FONT.render(f"Time: {round(elapsed_time)}s", 1, "white")
    WIN.blit(time_text, (10, 10))
#هنا نرسم مربع الشخصية في الاول كتبنا النافذة لاننا اكيد نبفاه يترسم في النافذة الي تطلع لنا و حددنا اللون الي نبغاه يكون للاعب و نحدد طبعا اللاعب حتى ترجع الخصائص هذه له
    pygame.draw.rect(WIN, "purple", player)
#هنا مكان كتابة الكود لرسم الشهب اذا كان فوق اللاعب راح يظهر الشهب خلف االاعب و تحته هتظهر من فوقه
    for star in stars:
        pygame.draw.rect(WIN, "white", star)
#هذا الامر يسوي تحديث للصفحة بحيث انه اي رسم ااو اضافة سوينها تنضاف للشاشة من غيره مافي شيء يصير في الشاشة
    pygame.display.update()

#هذا الكلاس الاساسي حقنا 
def main():
    #هذا امر التشغيل و امر التشغيل يلزمه نسويله لوب حتى يستمر بالشغل لانه بدون اللوب البرنامج هيفتح البرنام ج ويقفل بنفس الثانية
    run = True
# هنا استدعينا اللاعب و عينا له شكل المربع و حددنا موقعه بالاكس في البداية 200 لكن في الواي احنا نبغاه يكون تحت عند الحدود فطرحنا من ارتفاع النافذة ارتفاع اللاعب و زي ماقلنا ان الواي هنا تمشي عكس فالقيمة الاقل تعني انه ارتفع
#بعد موقع اللاعب حضينا قيمة الارتفاع و العرض حقته 
    player = pygame.Rect(200, HEIGHT - PLAYER_HEIGHT,
                         PLAYER_WIDTH, PLAYER_HEIGHT)
    # هنا دحين بنبدأ نحسب الوقت لمتى بدأت اللعبة

    clock = pygame.time.Clock()
    #  وهنا وقت البداية و دالة time.time() هتعطينا الوقت الحالي
    start_time = time.time()
    # وهذا عدد دورات الوقت 
    elapsed_time = 0
#هذا المتغير يُستخدم لتحديد كمية الوقت (بالميللي ثانية) التي يجب أن تمر قبل إضافة مجموعة جديدة من الشهب
# وهذا بالملي يعني كل ثانيثين راح ينشى مجموعة من النجوم
    star_add_increment = 2000
## هذا المتغير يستخدم لتتبع كمية الوقت (بالميللي ثانية) التي مرت منذ آخر إضافة لمجموعة من الشهب. في البداية، يتم تعيينه إلى القيمة صفر
    star_count = 0
#هذا المتغير هو قائمة (أو مصفوفة) تُستخدم لتخزين معلومات الشهب التي ستظهر في اللعبة. في البداية، القائمة فارغة وستتم ملؤها بمعلومات الشهب أثناء تشغيل اللعبة.
    stars = []
#هذا المتغير يُستخدم لتتبع ما إذا تم اصطدام اللاعب بأحد الشهب أم لا. في البداية، يتم تعيينه إلى False، وعندما يتم اكتشاف اصطدام، يتم تعيينه إلى True للتعرف على أن اللاعب قد خسر اللعبة.
    hit = False
#هذي هي لوب التشغيل فاحنا نبغى البرنامج يكون شغال خلال كل الاحداث و يخرج من هذي اللوب برضوا من خلال حدث والي هو ضغط اللاعب على زي اكس في النافذة 
    while run:
#  clock.tick(60) بحث نخلي عدد الاطارات في الثانية واح لكن ليش؟ هنا ضفنا الساعة
# الاطارات هنا تحدد السرعة كيف ؟ هو سرعة اللاعب الي حددناها فوق كانت انه يمشي خمس بكسل لكن الفترة الي ياخدها حتى يسويها هي الاطار 
#وسرعة الاطار تعتمد على الجهاز فاذا كان جهازك سريع هتشوفي سلاسة في الحركة و العكس 
#فإن هذا الجزء سيساعدك على معرفة كم من الوقت مر بالضبط منذ آخر مرة تم فيها رسم الشهب على الشاشة.
        star_count += clock.tick(60)
        # هنا عشان نحسب الزمن المنقضي للدورة هنطرح الوقت الحالي من زمن البداية 
        elapsed_time = time.time() - start_time

    
# هنا راح نسوي لوب شرطها انا كل ما كان عداد الشهب الي هو صفر في البداية اكبر من 2000 هو راح ينشئ مجموعة شهب
        if star_count > star_add_increment:
          # الثلاثة هي عدد النجوم الي ابغى انشئها  
            for _ in range(3):
                # هنا نبغاه تكون احداثياث الشهب من ضمن الحدود فحددنا انها نبغى الاكس حقها مابين الصفر
                # و العرض حق النافذة مطروحا منه عرض الشهب 
                star_x = random.randint(0, WIDTH - STAR_WIDTH)
                # هنا حتى تنشء فوق النافذة بشوية
                star = pygame.Rect(star_x, -STAR_HEIGHT,
                                   STAR_WIDTH, STAR_HEIGHT)
                # هنا نضيفها للقائمة
                stars.append(star)
# هنا نبغى نقلل الوقت توليد الشهب شان تزيد الصعوبة 
#ال200 هنا كحد اقصى بحيث ما ينزل عنها 
#و الخمسين هي الي هنطرحها منها في كل دورة
            star_add_increment = max(200, star_add_increment - 50)
            star_count = 0
#هذا الحدث راح يقفل اللعبة اذا تم الضغط على اكس و وهتلاحظوا اننا راح نعرف المفاتيح الي راح نكون لها وظيفة 
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                break
# فمثلا هنا استدعينا من مكتبة باي قيم المفتاح كي و اذا انظغط المفتاح ايش يصير  
        keys = pygame.key.get_pressed()
    #اول عيننا السهم الايسر و الي ممكن يتغير لاي مفتاح نبغاه و المفايح في مكتبة باي قيم لها اسم زي هنا للمفتاح السهم الايسر
    #and player.x - PLAYER_VEL >= 0: هذا الامر حتى نقوله انئٍشي4
        if keys[pygame.K_LEFT] and player.x - PLAYER_VEL >= 0:
        #هنا نخليه لما ينضغط على مغتاح السهم الايسر يطرح من قيمة الاكس 
        # وليش السرعة ايش دخلها ؟ احنا نبغى اللاعب يمشي بسرعة 5 بكسل لليسار و هذا المقصود و العكس صحيح لليمين 
        #
            player.x -= PLAYER_VEL
            #  هنا احنا مانقدر نقوله انه لا يقررب لقيمةالصفر و  لكن اننا نحدد ان كل القيم من احداثياث اللاعب وعرضه و التسارع لازم تكون اقل من العرض حق النافذة عشان نسمح للاعب انه يتحرك
        if keys[pygame.K_RIGHT] and player.x + PLAYER_VEL + player.width <= WIDTH:
            player.x += PLAYER_VEL
    #هذي هنسويها عشان نحرك النجوم وكمان لو لمست لاعبنا
    #و كمان نبغاه ما يحرك و يسوي شيء مع الشهب الي انتجت خارج اطار النافذة
        for star in stars[:]:
            # هنا احنا هنحركها على محور Y للأسفل 
            # STAR_VEL هتكون البكسل الي راح تمشيها
            
            star.y += STAR_VEL
            # هنا نشوف اذا الشهب كانت موجودة فوق النافذة و مارح تظهر فيها راح نشيلها
            if star.y > HEIGHT:
                stars.remove(star)
                #هنا احنا جمعنا احداثياث الواي للشهب و اارتفاع الشهب اذا كانت مساوي و اكبر من ارتفاع اللاعب يشيك اذا حدث تصادم معاه
                #هذا الجزء يُستخدم لفحص تصادم الشهب مع اللاعب.
#star.y + star.height يُمثل الموقع السفلي للشهب (نهاية الشهب).
#player.y يُمثل الموقع العلوي لللاعب (أعلى اللاعب).
#star.colliderect(player) هذه الدالة تُستخدم لفحص تداخل المستطيلين الممثلين للشهب واللاعب. إذا تداخلوا، فإن هناك تصادم قد حدث.
#ذا كان هناك تصادم بين الشهب واللاعب (يعني الشهب وصل إلى اللاعب)، 
#يتم حذف الشهب من القائمة باستخدام stars.remove(star) ويتم تعيين hit إلى True للإشارة إلى أن اللاعب قد فشل في اللعبة.
            elif star.y + star.height >= player.y and star.colliderect(player):
                stars.remove(star)
                hit = True
                break
#هنا هنكتب الامر الي يتولى خسارة اللاعب لو لمسته الشهب و صار الHIT ترو 
        if hit:
            # فهيكون نص يظهر 

            lost_text = FONT.render("You Lost!", 1, "white")
            # هنا نبغاها تظهر في منتصف الشاشة فراح نقسم عرض و ارتفاع الشاشة على اثنين و بطرحنا منها احداثياث مكان النص الي راح يظهر في اي مكان 
            #لكن دالة الحصول على العرض و الارتفاع راح تساعدنا 
            WIN.blit(lost_text, (WIDTH/2 - lost_text.get_width()/2, HEIGHT/2 - lost_text.get_height()/2))
            #نحدث الشاشة حتى تطلع لنا الرسالة
            pygame.display.update()
            # اخيرا هنسوي تجميد للنافذة لاربع ثواني حتى يقدر اللاعب يقراها
            pygame.time.delay(4000)
            break

        draw(player, elapsed_time, stars)

    pygame.quit()

#هذي ضرورية اننا نحطها في هذي الضفحة حتى انا لما نسوي رن لهذا الكلاس النافذة تطلع هنا و ماتطلع لمانشغل صفحة ثانية غيرها حتى لو تم تمرير العوامل من هنا لمكان ثاني
if __name__ == "__main__":
    main()
